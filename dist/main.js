/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/games/dodge.js":
/*!****************************!*\
  !*** ./src/games/dodge.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canvas: () => (/* binding */ canvas),\n/* harmony export */   onPause: () => (/* binding */ onPause),\n/* harmony export */   onPlay: () => (/* binding */ onPlay)\n/* harmony export */ });\nconst canvas=document.createElement('canvas');\r\ncanvas.width=window.innerWidth;\r\ncanvas.height=window.innerHeight;\r\n//document.body.appendChild(canvas);\r\nconst key='Qw?5a$';\r\nconst ctx=canvas.getContext('2d');\r\n\r\nconst enemies=[];\r\nconst spawnRadius=75000;\r\n\r\nlet minSide=Math.min(canvas.width,canvas.height);\r\nconst explosionImage=new Image(50,50);\r\nexplosionImage.src='images/explosion.png';\r\n\r\nlet explosionLoaded=false;\r\nexplosionImage.onload=()=>explosionLoaded=true;\r\nlet level=1,kills=0;\r\nlet maxScore=localStorage.getItem(key)||1;\r\nlet time=0;\r\nlet pause=true;\r\nlet onPlay=()=>{};\r\nconst onPause=()=>{\r\n    pause=true;\r\n};\r\n\r\nconst explosions={};\r\nfunction explode(x,y){\r\n    explosions[[x,y]]=100;\r\n    kills++;\r\n}\r\nfunction drawExplosion([x,y]){\r\n    if(explosions[[x,y]]--<0){\r\n        delete explosions[[x,y]];\r\n        console.log('del')\r\n    }\r\n    else if(explosionLoaded)\r\n        ctx.drawImage(explosionImage,x-minSide/20,y-minSide/20,minSide/20,minSide/20);\r\n}\r\n\r\nclass ship{\r\n    constructor(scale,color,speed){\r\n        this.angle=0;\r\n        this.scale=scale;\r\n        this.speed=speed;\r\n        this.color=color;\r\n    }\r\n    drawTo(x,y,cos,sin){\r\n        ctx.lineTo(\r\n            this.x+this.scale*(x*cos-y*sin),\r\n            this.y+this.scale*(y*cos+x*sin)\r\n        );\r\n    }\r\n    draw(){\r\n        if(this.x<0||this.y<0||this.x>canvas.width||this.y>canvas.height)\r\n            return;\r\n        ctx.fillStyle=this.color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x,this.y);\r\n        const cos=Math.cos(this.angle);\r\n        const sin=Math.sin(this.angle);\r\n        this.drawTo(0,-2,cos,sin);\r\n        this.drawTo(-1,1,cos,sin);\r\n        this.drawTo(0,0,cos,sin);\r\n        this.drawTo(1,1,cos,sin);\r\n        this.drawTo(0,-2,cos,sin);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    spawn(player){\r\n        for(let i=0;i<1;i++){\r\n            this.x=Math.random()*canvas.width*1.25;\r\n            this.y=Math.random()*canvas.height*1.25;\r\n            if(((this.x-player.x)**2+(this.y-player.y)**2)<=spawnRadius)\r\n                i--;\r\n        }\r\n    }\r\n    update(player,enemies){\r\n        for(let enemy of enemies){\r\n            if(this===enemy) break;\r\n            const dir={x:this.x-enemy.x,y:this.y-enemy.y};\r\n            const length=dir.x**2+dir.y**2;\r\n            if(length<400){\r\n                explode((this.x+enemy.x)/2,(this.y+enemy.y)/2)\r\n                this.spawn(player);\r\n                enemy.spawn(player);\r\n            }\r\n        }\r\n        const dir={x:this.x-player.x,y:this.y-player.y};\r\n        const length=Math.sqrt(dir.x**2+dir.y**2);\r\n        if(length<20){\r\n            explode(this.x,this.y);\r\n            this.spawn(player);\r\n            player.hit();\r\n        }\r\n        \r\n            \r\n        dir.x/=length;\r\n        dir.y/=length;\r\n        this.x-=dir.x*this.speed;\r\n        this.y-=dir.y*this.speed;\r\n\r\n        this.angle=Math.acos(dir.y)*(dir.x>0?-1:1);\r\n    }\r\n}\r\n\r\nconst player=new ship(minSide*.02,'green',4);\r\nplayer.spawn=function(){\r\n    this.x=canvas.width*.5;\r\n    this.y=canvas.height*.5;\r\n    this.moveForward=this.moveBackward=this.moveLeft=this.moveRight=0;\r\n}\r\nplayer.setup=function(){\r\n    this.spawn();\r\n    canvas.onkeydown=ev=>{\r\n        if(ev.key=='q') {\r\n            if(pause)\r\n                onPlay();\r\n            else\r\n                onPause();\r\n        }\r\n        switch ( ev.code ) {\r\n            case 'ArrowUp':\r\n            case 'KeyW':\r\n                this.moveForward = 1;\r\n                break;\r\n            case 'ArrowLeft':\r\n            case 'KeyA':\r\n                this.moveLeft = 1;\r\n                break;\r\n            case 'ArrowDown':\r\n            case 'KeyS':\r\n                this.moveBackward = 1;\r\n                break;\r\n            case 'ArrowRight':\r\n            case 'KeyD':\r\n                this.moveRight = 1;\r\n                break;\r\n        }\r\n    };\r\n    canvas.onkeyup=ev=> {\r\n        switch ( ev.code ) {\r\n            case 'ArrowUp':\r\n            case 'KeyW':\r\n                this.moveForward = 0;\r\n                break;\r\n            case 'ArrowLeft':\r\n            case 'KeyA':\r\n                this.moveLeft = 0;\r\n                break;\r\n            case 'ArrowDown':\r\n            case 'KeyS':\r\n                this.moveBackward = 0;\r\n                break;\r\n            case 'ArrowRight':\r\n            case 'KeyD':\r\n                this.moveRight = 0;\r\n                break;\r\n        }\r\n    };\r\n};\r\nplayer.move=function(){\r\n    let dir={\r\n        y:this.moveForward-this.moveBackward,\r\n        x:this.moveRight-this.moveLeft\r\n    };\r\n    if(dir.x===0&&dir.y===0)\r\n        return;\r\n    const length=Math.sqrt(dir.x**2+dir.y**2);\r\n    dir.x/=length;\r\n    dir.y/=length;\r\n\r\n    if ( this.moveForward || this.moveBackward ) this.y-=dir.y*this.speed;\r\n    if ( this.moveLeft || this.moveRight ) this.x+=dir.x*this.speed;\r\n    this.y=Math.min(Math.max(0,this.y),canvas.height);\r\n    this.x=Math.min(Math.max(0,this.x),canvas.width);\r\n    //console.log(player)\r\n    this.angle=Math.acos(dir.y)*(dir.x<0?-1:1);\r\n};\r\nplayer.hit=function(){\r\n    console.log('died')\r\n    time=0;\r\n    this.setup();\r\n    enemies.forEach(val=>val.spawn(player));\r\n    let score=level*25+kills*2;\r\n    if(score>maxScore){\r\n        maxScore=score;\r\n        localStorage.setItem(key,score);\r\n    }\r\n    while(level>1){\r\n        level--;\r\n        enemies.pop();\r\n    }\r\n    kills=0;\r\n};\r\nfunction levelUp(){\r\n    time=0;\r\n    level++;\r\n    let ds=0;\r\n    if(level%5==0) ds=.05;\r\n    enemies.push(new ship(minSide*.015,'red',3+ds));\r\n    player.spawn();\r\n    for(let enemy of enemies)\r\n        enemy.spawn(player);\r\n}\r\n\r\nenemies.setup=function(){\r\n    for(let i=0;i<6;i++){\r\n        const newEnemy=new ship(minSide*.015,'red',3);\r\n        newEnemy.spawn(player);\r\n        this.push(newEnemy);\r\n    }\r\n}\r\n\r\nplayer.setup();\r\nenemies.setup();\r\n\r\nfunction loop(){\r\n    setTimeout(()=>{\r\n        if(time>20000)\r\n            levelUp();\r\n        time+=60;\r\n        ctx.fillStyle='black';\r\n        ctx.fillRect(0,0,canvas.width,canvas.height);\r\n\r\n        player.draw();\r\n        player.move();\r\n        enemies.forEach(enemy=>{\r\n            enemy.update(player,enemies);\r\n            enemy.draw();\r\n        });\r\n        for(let boom in explosions)\r\n            drawExplosion(boom.split(',').map(val=>parseFloat(val)));\r\n        \r\n        ctx.strokeStyle='red';\r\n        ctx.strokeText('max score: '+maxScore,canvas.width-90,25);\r\n        ctx.strokeText('level '+level,canvas.width-90,35);\r\n        ctx.strokeText((time/1000).toFixed(1),canvas.width-90,45);\r\n        if(pause)\r\n            return;\r\n        loop();\r\n    },60);\r\n}\r\n// window.onresize=()=>{\r\n//     canvas.width=window.innerWidth;\r\n//     canvas.height=window.innerHeight;\r\n//     minSide=Math.min(canvas.width,canvas.height);\r\n//     player.scale=minSide*.02;\r\n//     enemies.forEach(enemy=>enemy.scale=minSide*.015);\r\n//     if(pause)\r\n//         loop();\r\n// }\r\nonPlay=()=>{\r\n    pause=false;\r\n    loop();\r\n};\r\nloop();\r\n\n\n//# sourceURL=webpack://art-gallery/./src/games/dodge.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_addons_controls_PointerLockControls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three/addons/controls/PointerLockControls.js */ \"./node_modules/three/examples/jsm/controls/PointerLockControls.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n/* harmony import */ var _setPaintings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPaintings */ \"./src/setPaintings.js\");\n/* harmony import */ var _setScene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setScene */ \"./src/setScene.js\");\n/* harmony import */ var _games_dodge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./games/dodge */ \"./src/games/dodge.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEBUG=true;\r\n\r\nlet scene, camera, renderer;\r\n\r\nconst objectLoader=new three__WEBPACK_IMPORTED_MODULE_3__.ObjectLoader();\r\nconst imageLoader=new three__WEBPACK_IMPORTED_MODULE_3__.TextureLoader();\r\nconst fileLoader=new three__WEBPACK_IMPORTED_MODULE_3__.FileLoader();\r\nconst geometryLoader=new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_4__.GLTFLoader();\r\n\r\nconst paintingGeometry=new three__WEBPACK_IMPORTED_MODULE_3__.PlaneGeometry(1.512,1.512);\r\nconst paintingGeometryHD=new three__WEBPACK_IMPORTED_MODULE_3__.PlaneGeometry(1.512,1.512,300);\r\nconst uniformObjects=[];\r\n\r\nconst blend={blending:three__WEBPACK_IMPORTED_MODULE_3__.CustomBlending,blendEquation:three__WEBPACK_IMPORTED_MODULE_3__.AddEquation};\r\n\r\nconst captionDiv=document.createElement('div');\r\ncaptionDiv.className='no-caption';\r\ndocument.body.appendChild(captionDiv);\r\nconst caption={\r\n    top:document.createElement('div'),\r\n    bottom:document.createElement('div'),\r\n    link:document.createElement('a'),\r\n};\r\nfor(let e in caption)\r\n    captionDiv.appendChild(caption[e]);\r\nconst button=document.createElement('button');\r\nbutton.textContent='E';\r\nbutton.className='action';\r\n\r\nlet paused=true;\r\nconst canvases={dodgeGame:new three__WEBPACK_IMPORTED_MODULE_3__.CanvasTexture(_games_dodge__WEBPACK_IMPORTED_MODULE_2__.canvas)};\r\nconst actions={\r\n    none:null,\r\n    drink:()=>{console.log('drink');camera.health-=10;},\r\n    walkThrough:()=>{console.log('walk');camera.position.y=10;},\r\n    dodgeGame:()=>{\r\n        paused=!paused;\r\n        if(paused)\r\n            _games_dodge__WEBPACK_IMPORTED_MODULE_2__.onPause();\r\n        else\r\n            _games_dodge__WEBPACK_IMPORTED_MODULE_2__.onPlay();\r\n        }\r\n};\r\nlet actionList=[];\r\nfor(let action in actions)\r\n    actionList.push(action);\r\n\r\nfunction init(){\r\n    scene = new three__WEBPACK_IMPORTED_MODULE_3__.Scene();\r\n    camera = new three__WEBPACK_IMPORTED_MODULE_3__.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.health=100;\r\n\r\n    renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer();\r\n    window.onresize=(ev)=>{\r\n        camera.aspect=window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n    }\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    document.body.appendChild( renderer.domElement );\r\n    \r\n    createScene();\r\n    createPaintings();\r\n\r\n    if(DEBUG){\r\n        (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingGuiInit)();\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.scene=scene;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.uniformObjects=uniformObjects;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.geometry={normal:paintingGeometry,HD:paintingGeometryHD};\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.blend=blend;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.actions=actionList;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases=canvases;\r\n        for(let canvas in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases){\r\n            _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases[canvas].anisotropy=4;\r\n            _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvasNames.push(canvas);\r\n        }\r\n\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.addNew=()=>{\r\n            if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName=='')\r\n                return;\r\n            if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects){\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName]);\r\n                return;\r\n            }\r\n            geometryLoader.load('meshes/paintingFrame.glb',(data)=>{\r\n                data.scene.children[0].material.color.setHex(0x2f1f3f);\r\n                const material = new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial(blend);\r\n                const painting = new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(paintingGeometry, material);\r\n                const spotLight = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLight(0xffffff,1000);\r\n                spotLight.target=painting;\r\n                data.scene.add(spotLight);\r\n                const spotLightHelper = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLightHelper(spotLight);\r\n                data.scene.add(spotLightHelper);\r\n\r\n                painting.rotateX(Math.PI/2);\r\n                data.scene.add(painting);\r\n                data.scene.rotateX(-Math.PI/2);\r\n\r\n                scene.add(data.scene);\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName,data.scene);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction createScene(){\r\n    let props;\r\n    if(DEBUG){\r\n        const propsString= localStorage.getItem('sceneProps');\r\n        console.log('props:'+propsString);\r\n        if(propsString)\r\n            props=JSON.parse(propsString);\r\n        else\r\n            props={\r\n                museum:{\r\n                    color:0x2f1f3f,\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,0),\r\n                    rotation:new three__WEBPACK_IMPORTED_MODULE_3__.Euler(0,0,0,'XYZ'),\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(1,1,1)\r\n                },\r\n                ambient:{color:0xffffff},\r\n                spotLight:{\r\n                    color:0xffffff,\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,15,0),\r\n                    power:1000.0\r\n                },\r\n                floor:{\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,0),\r\n                    color:0x6f4f7f,\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(1,1,1)\r\n                },\r\n                skyBox:{\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,2.5,0),\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(1,1,1)\r\n                }\r\n            };\r\n    }\r\n    else\r\n        props= __webpack_require__(/*! ./sceneProps.json */ \"./src/sceneProps.json\");\r\n    \r\n    const ambientLight=new three__WEBPACK_IMPORTED_MODULE_3__.AmbientLight(props.ambient.color);\r\n    scene.add(ambientLight);\r\n\r\n    const spotLight = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLight(props.spotLight.color);\r\n    spotLight.power=props.spotLight.power;\r\n    spotLight.position.copy(props.spotLight.position);\r\n    scene.add(spotLight);\r\n\r\n    const spotLightHelper = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLightHelper(spotLight);\r\n    scene.add(spotLightHelper);\r\n\r\n    const floorGeometry=new three__WEBPACK_IMPORTED_MODULE_3__.PlaneGeometry(100,100);\r\n    const floorMaterial=new three__WEBPACK_IMPORTED_MODULE_3__.MeshPhongMaterial({color:props.floor.color,side:three__WEBPACK_IMPORTED_MODULE_3__.DoubleSide});\r\n    const floor=new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(floorGeometry,floorMaterial);\r\n    floor.rotateX(Math.PI/2);\r\n    floor.position.copy(props.floor.position);\r\n    floor.scale.copy(props.floor.scale);\r\n    scene.add(floor);\r\n\r\n    \r\n    geometryLoader.load('meshes/museum.glb',(data)=>{\r\n        data.scene.children[0].material.side=three__WEBPACK_IMPORTED_MODULE_3__.DoubleSide;\r\n        data.scene.children[0].material.color.setHex(props.museum.color);\r\n        data.scene.children[0].position.copy(props.museum.position);\r\n        data.scene.children[0].rotation.set(props.museum.rotation._x,props.museum.rotation._y,props.museum.rotation._z,'XYZ');\r\n        data.scene.children[0].scale.copy(props.museum.scale);\r\n        scene.add(data.scene);\r\n        spotLight.target=data.scene.children[0];\r\n        if(DEBUG)\r\n            _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.museum=data.scene.children[0];\r\n    });\r\n\r\n    const eyeGeometry=new three__WEBPACK_IMPORTED_MODULE_3__.PlaneGeometry(2,2);\r\n    const cubeEyeSides=[\r\n        {eye:'rinnegan',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,1,0)},\r\n        {eye:'rinnegan',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,-1,0)},\r\n        {eye:'byakugan',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(1,0,0)},\r\n        {eye:'ketsuryugan',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(-1,0,0)},\r\n        {eye:'sharingan',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,1)},\r\n        {eye:'mangekyo',position:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,-1)}\r\n    ];\r\n    fileLoader.load('shaders/eyes/eyes.vert',vshader=>{\r\n        const eyes=new three__WEBPACK_IMPORTED_MODULE_3__.Scene();\r\n        for(let side of cubeEyeSides){\r\n                fileLoader.load('shaders/eyes/'+side.eye+'.frag',fshader=>{\r\n                    const eyeMaterial=new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial({\r\n                        uniforms:{iTime:{value:100.0}},\r\n                        fragmentShader:fshader,\r\n                        vertexShader:vshader\r\n                    });\r\n                    uniformObjects.push(eyeMaterial.uniforms);\r\n                    const eye=new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(eyeGeometry,eyeMaterial);\r\n                    eye.position.copy(side.position);\r\n                    eye.lookAt(new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,0));\r\n                    eyes.add(eye);\r\n                })\r\n        }\r\n        const skyGeometry=new three__WEBPACK_IMPORTED_MODULE_3__.SphereGeometry(1);\r\n        fileLoader.load('shaders/sky.vert',vshader=>\r\n            fileLoader.load('shaders/sky.frag',fshader=>{ \r\n                const skyMaterial=new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial({\r\n                    uniforms:{iTime:{value:1.0}},\r\n                    vertexShader:vshader,\r\n                    fragmentShader:fshader\r\n                });\r\n                uniformObjects.push(skyMaterial.uniforms);\r\n                const epilepsy=new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(skyGeometry,skyMaterial);\r\n                epilepsy.rotateZ(Math.PI/2);\r\n                epilepsy.scale.set(.1,.1,.1);\r\n                eyes.add(epilepsy);\r\n\r\n                eyes.position.set(1,0,4);\r\n\r\n                eyes.position.copy(props.skyBox.position);\r\n                eyes.scale.copy(props.skyBox.scale);\r\n                scene.add(eyes);\r\n                \r\n                if(DEBUG){\r\n                    _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.camera=camera;\r\n                    _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.spotLight=spotLight;\r\n                    _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.ambient=ambientLight;\r\n                    _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.floor=floor;\r\n                    _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.skyBox=eyes;\r\n                    (0,_setScene__WEBPACK_IMPORTED_MODULE_1__.sceneGui)();\r\n                }\r\n            }));\r\n    });\r\n}\r\n\r\nfunction createPaintings(){\r\n    let paintings;\r\n    if(DEBUG){\r\n        const paintingsString=localStorage.getItem('paintings');\r\n        console.log('paintings: '+paintingsString);\r\n        if(!paintingsString)\r\n            return;\r\n        paintings=JSON.parse(paintingsString);\r\n    }\r\n    else\r\n        paintings= __webpack_require__(/*! ./paintings.json */ \"./src/paintings.json\");\r\n    for(let name in paintings){\r\n        const painting=paintings[name];\r\n        geometryLoader.load('meshes/paintingFrame.glb',(data)=>{\r\n            data.scene.children[0].material.color.setHex(painting.color);\r\n            data.scene.position.copy(painting.position);\r\n            data.scene.rotation.set(painting.rotation._x,painting.rotation._y,painting.rotation._z);\r\n            data.scene.scale.copy(painting.scale);\r\n            data.scene.text=painting.text;\r\n            data.scene.action=painting.action;\r\n            data.scene.isHD=painting.isHD;\r\n            data.scene.imageType=painting.imageType;\r\n\r\n            const add=paint=>{\r\n                const spotLight = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLight(painting.light.color);\r\n                spotLight.power=painting.light.power;\r\n                spotLight.target=paint;\r\n                data.scene.add(spotLight);\r\n                const spotLightHelper = new three__WEBPACK_IMPORTED_MODULE_3__.SpotLightHelper(spotLight);\r\n                data.scene.add(spotLightHelper);\r\n\r\n                paint.rotateX(Math.PI/2);\r\n                spotLight.position.copy(painting.light.position);\r\n                data.scene.add(paint);\r\n                scene.add(data.scene);\r\n                if(DEBUG)\r\n                    (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(name,data.scene);\r\n            };\r\n            const paintGeo=painting.isHD?paintingGeometryHD:paintingGeometry;\r\n            switch(painting.imageType){\r\n            case('image'):\r\n                data.scene.image=painting.image;\r\n                imageLoader.load('images/'+painting.image,(data)=>{\r\n                    data.anisotropy=4;\r\n                    add(new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(paintGeo, new three__WEBPACK_IMPORTED_MODULE_3__.MeshBasicMaterial({map:data,...blend})))\r\n                });\r\n                break;\r\n            case('shader'):\r\n                data.scene.shader=painting.shader;\r\n                fileLoader.load('shaders/'+painting.shader+'.vert',(vshader)=>\r\n                    fileLoader.load('shaders/'+painting.shader+'.frag',(fshader)=>{ \r\n                        const mesh=new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(paintGeo, new three__WEBPACK_IMPORTED_MODULE_3__.ShaderMaterial({\r\n                            uniforms:{iTime:{value:100.0}},\r\n                            vertexShader:vshader,\r\n                            fragmentShader:fshader,\r\n                            ...blend\r\n                        }));\r\n                        add(mesh);\r\n                        uniformObjects.push(mesh.material.uniforms);\r\n                    }));\r\n                break;\r\n            case('canvas'):\r\n                data.scene.canvas=painting.canvas;\r\n                canvases[painting.canvas].anisotropy=4;\r\n                add(new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(paintGeo,new three__WEBPACK_IMPORTED_MODULE_3__.MeshBasicMaterial({map:canvases[painting.canvas],...blend})));\r\n                break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst constraints={\r\n    y:.6,\r\n    bigBound:{lo:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(-1.867,.6,-19.35),hi:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(5.5,.6,8.898)},\r\n    smallBound:{lo:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(-1.867,.6,-7.5),hi:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(15.5,.6,-2.9)},\r\n    e:.5,\r\n    controls:undefined,\r\n    moveForward:0,moveBackward:0,moveLeft:0,moveRight:0,\r\n    velocity:new three__WEBPACK_IMPORTED_MODULE_3__.Vector3(0,0,0),\r\n    direction:new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(0,0),\r\n    init:function(){\r\n        this.controls=new three_addons_controls_PointerLockControls_js__WEBPACK_IMPORTED_MODULE_5__.PointerLockControls(camera,renderer.domElement);\r\n        window.onkeydown=ev=>{\r\n            if(ev.key=='e') button.click();\r\n            if(ev.key=='q') {\r\n                if(this.controls.isLocked)this.controls.unlock();\r\n                else this.controls.lock();\r\n            }\r\n            switch ( ev.code ) {\r\n                case 'ArrowUp':\r\n                case 'KeyW':\r\n                    this.moveForward = 1;\r\n                    break;\r\n                case 'ArrowLeft':\r\n                case 'KeyA':\r\n                    this.moveLeft = 1;\r\n                    break;\r\n                case 'ArrowDown':\r\n                case 'KeyS':\r\n                    this.moveBackward = 1;\r\n                    break;\r\n                case 'ArrowRight':\r\n                case 'KeyD':\r\n                    this.moveRight = 1;\r\n                    break;\r\n            }\r\n        };\r\n        window.onkeyup=ev=> {\r\n            switch ( ev.code ) {\r\n                case 'ArrowUp':\r\n                case 'KeyW':\r\n                    this.moveForward = 0;\r\n                    break;\r\n                case 'ArrowLeft':\r\n                case 'KeyA':\r\n                    this.moveLeft = 0;\r\n                    break;\r\n                case 'ArrowDown':\r\n                case 'KeyS':\r\n                    this.moveBackward = 0;\r\n                    break;\r\n                case 'ArrowRight':\r\n                case 'KeyD':\r\n                    this.moveRight = 0;\r\n                    break;\r\n            }\r\n        };\r\n    },\r\n    move:function(delta){\r\n        this.velocity.x -= this.velocity.x * 10.0 * delta;\r\n        this.velocity.z -= this.velocity.z * 10.0 * delta;\r\n\r\n        this.direction.y = this.moveForward-this.moveBackward;\r\n        this.direction.x = this.moveRight-this.moveLeft;\r\n        this.direction.normalize();\r\n\r\n        if ( this.moveForward || this.moveBackward ) this.velocity.z -= this.direction.y * 40.0 * delta;\r\n        if ( this.moveLeft || this.moveRight ) this.velocity.x -= this.direction.x * 40.0 * delta;\r\n\r\n        this.controls.moveRight( - this.velocity.x * delta );\r\n        this.controls.moveForward( - this.velocity.z * delta );\r\n    },\r\n    keepInBounds:function(pos){\r\n        if(Math.abs(pos.y-10)<this.e){\r\n            pos.y=10;\r\n            camera.health-=1;\r\n            return;\r\n        }\r\n        // pos=new three.Vector3();\r\n        let upperBound=new three__WEBPACK_IMPORTED_MODULE_3__.Vector3();\r\n        upperBound.copy(this.bigBound.hi);\r\n        let lowerBound=new three__WEBPACK_IMPORTED_MODULE_3__.Vector3();\r\n        lowerBound.copy(this.bigBound.lo);\r\n\r\n        if((pos.z<this.smallBound.hi.z+this.e)&&(pos.z>this.smallBound.lo.z-this.e)){\r\n            upperBound.copy(this.smallBound.hi);\r\n            if(pos.x>=this.bigBound.hi.x)\r\n                lowerBound.copy(this.smallBound.lo);\r\n            else\r\n                upperBound.setZ(this.bigBound.hi.z);\r\n        }\r\n        \r\n        pos.clamp(lowerBound,upperBound);\r\n    },\r\n    manageHealth:function(){\r\n        if(camera.health==0){\r\n            camera.position.set(0,0,0);\r\n            camera.health=100;\r\n        }\r\n    }\r\n};\r\n\r\nlet none={top:'',bottom:'',link:'',href:''};\r\nlet curText={top:'',bottom:'',link:'',href:''};\r\nfunction renderText(text,action){\r\n    let k=true;\r\n    for(let t in text)\r\n        if(text[t]!=curText[t])\r\n            k=false;\r\n        \r\n    if(k)return;\r\n\r\n    if(text==none)\r\n        captionDiv.className='no-caption';\r\n    else\r\n        captionDiv.className='caption';\r\n\r\n    for(let t in caption){\r\n        caption[t].textContent=text[t];\r\n        curText[t]=text[t]\r\n    }\r\n    if(text.href!='')\r\n        caption.link.href=text.href;\r\n\r\n    if(action){\r\n        if(!caption.hasButton){\r\n            caption.hasButton=true;\r\n            caption[0].append(button);\r\n        }\r\n        button.onclick=action;\r\n    }\r\n    else if(caption.hasButton){\r\n        caption.hasButton=false;\r\n        button.remove();\r\n        button.onclick=()=>{console.log('hi')};\r\n    }\r\n}\r\n\r\nconst clock=new three__WEBPACK_IMPORTED_MODULE_3__.Clock();\r\nconst distanceToPaintings2=20;\r\n\r\nfunction animate() {\r\n\trequestAnimationFrame( animate );\r\n    constraints.manageHealth();\r\n    constraints.move(clock.getDelta());\r\n    constraints.keepInBounds(camera.position);\r\n    for(let uniform of uniformObjects){\r\n        if(uniform.iTime)\r\n            uniform.iTime.value=clock.elapsedTime;\r\n    }\r\n    let text=none;\r\n    let action=null;\r\n    for(let painting in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects){\r\n        if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].position)\r\n        if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].position.distanceToSquared(camera.position)<=distanceToPaintings2){\r\n            text=_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].text;\r\n            action=actions[_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].action];\r\n            break;\r\n        }\r\n    }\r\n    for(let canvas in canvases)\r\n        canvases[canvas].needsUpdate=true;\r\n    renderText(text,action);\r\n\trenderer.render( scene, camera );\r\n}\r\n\r\ninit();\r\nconstraints.init();\r\nanimate();\n\n//# sourceURL=webpack://art-gallery/./src/main.js?");

/***/ }),

/***/ "./src/setPaintings.js":
/*!*****************************!*\
  !*** ./src/setPaintings.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeObj: () => (/* binding */ changeObj),\n/* harmony export */   paintingGuiInit: () => (/* binding */ init),\n/* harmony export */   paintingState: () => (/* binding */ state),\n/* harmony export */   vec3Control: () => (/* binding */ vec3Control)\n/* harmony export */ });\n/* harmony import */ var lil_gui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lil-gui */ \"./node_modules/lil-gui/dist/lil-gui.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n\r\nlet gui, listGui, inspect, chooser;\r\nlet textureLoader, loader;\r\n\r\nconst state={\r\n    currentName:'',newName:'',\r\n    currentShader:'',currentImage:'',currentCanvas:'',currentType:'shader',\r\n    addNew:()=>{},\r\n    objectNames:[],objects:{},\r\n    getOutput:function(){\r\n        const out={};\r\n        for(let name in this.objects){\r\n            const object=this.objects[name];\r\n            const cout=out[name]={};\r\n            \r\n            cout[object.imageType]=object[object.imageType];\r\n            cout.imageType=object.imageType;\r\n            cout.position=object.position;\r\n            cout.rotation=object.rotation;\r\n            cout.scale=object.scale;\r\n            cout.color=object.children[0].material.color;\r\n            cout.text=object.text;\r\n            cout.action=object.action;\r\n            cout.isHD=object.isHD||false;\r\n            cout.light={\r\n                position:object.children[1].position,\r\n                power:object.children[1].power,\r\n                color:object.children[1].color\r\n            };\r\n        }\r\n        return out;\r\n    },\r\n    print:function(){\r\n        const out=this.getOutput();\r\n        console.log(out);\r\n        (0,file_saver__WEBPACK_IMPORTED_MODULE_0__.saveAs)(new Blob([JSON.stringify(out)], {type: 'application/json'}),'paintings.json');\r\n    },\r\n    save:function(){\r\n        const out=this.getOutput();\r\n        localStorage.removeItem('paintings');\r\n        localStorage.setItem('paintings',JSON.stringify(out));\r\n    },\r\n    remove:function(){\r\n        if(this.objectNames.length==0)\r\n            return;\r\n        this.scene.remove(this.objects[this.currentName]);\r\n        delete this.objects[this.currentName];\r\n        this.objectNames.splice(this.objectNames.findIndex(x=>x==this.currentName),1);\r\n        changeObj('',null);\r\n    },\r\n    scene:null,\r\n    uniformObjects:[],\r\n    geometry:{},\r\n    blend:{},\r\n    actions:[],\r\n    canvasNames:[],canvases:{}\r\n};\r\n\r\nconst imageTypes=['image','shader','canvas'];\r\nconst shaders=['spiral','water'];\r\nconst images=['DeitectivesIntro.jpg','GatoStart.png','SpaceGeoIntro.png'];\r\n\r\nfunction init(){\r\n    gui = new lil_gui__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    listGui= gui.addFolder('list');\r\n    inspect=gui.addFolder('inspector');\r\n    listGui.add(state, 'newName');\r\n    listGui.add(state,'addNew');\r\n    listGui.add(state,'print');\r\n    listGui.add(state,'save');\r\n    chooser=listGui.addFolder('chooser');\r\n    textureLoader=new three__WEBPACK_IMPORTED_MODULE_2__.TextureLoader();\r\n    loader=new three__WEBPACK_IMPORTED_MODULE_2__.FileLoader();\r\n}\r\n\r\nfunction changeObj(name, obj){\r\n    state.currentName=name;\r\n    if(!(name in state.objects)){\r\n        if(name!=''){\r\n            state.objects[name]=obj;\r\n            state.objectNames.push(name);\r\n        }\r\n        chooser.destroy();\r\n        chooser=listGui.addFolder('chooser')\r\n        chooser.add(state, 'currentName', state.objectNames)\r\n            .onChange(v=>{\r\n                console.log(v+' '+state.currentName);\r\n                changeObj(v,state.objects[v]);\r\n            });\r\n    }\r\n    inspect.destroy();\r\n    if(name=='')\r\n        return;\r\n    inspect=gui.addFolder('inspector');\r\n    inspect.add(state,'remove');\r\n\r\n    const imageEditor=imageGui(obj);\r\n    textGui(obj);\r\n    vectorGui(obj);\r\n\r\n    imageEditor(obj.imageType);\r\n}\r\n\r\nfunction imageGui(obj){\r\n    if(!obj.imageType)\r\n        obj.imageType='shader';\r\n    else\r\n        state['current'+obj.imageType.charAt(0).toUpperCase() + obj.imageType.slice(1)]=obj[obj.imageType];\r\n    state.currentType=obj.imageType;\r\n    \r\n    let imageFolder;\r\n    const imageEditor=type=>{\r\n        imageFolder=inspect.addFolder('image');\r\n        obj.imageType=type;\r\n        switch(type){\r\n        case 'image':\r\n            imageFolder.add(state,'currentImage',images)\r\n                .onChange(image=>textureLoader\r\n                        .load('images/'+image,data=>{\r\n                            data.anisotropy=2;\r\n                            obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({map:data,...state.blend});\r\n                            obj.image=image;\r\n                        }));\r\n            break;\r\n        case 'shader':\r\n            imageFolder.add(state,'currentShader',shaders)\r\n                .onChange(shader=>loader\r\n                    .load('shaders/'+shader+'.vert',vert=>loader\r\n                        .load('shaders/'+shader+'.frag',frag=>{\r\n                            obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.ShaderMaterial({\r\n                                uniforms:{iTime:{value:100.0}},\r\n                                fragmentShader:frag,\r\n                                vertexShader:vert,\r\n                                ...state.blend\r\n                            });\r\n                            if(!state.uniformObjects.includes(obj.children[obj.children.length-1].material.uniforms))\r\n                                state.uniformObjects.push(obj.children[obj.children.length-1].material.uniforms);\r\n                            obj.shader=shader;\r\n                        })));\r\n            break;\r\n        case 'canvas':\r\n            imageFolder.add(state,'currentCanvas',state.canvasNames)\r\n                .onChange(canvas=>{\r\n                    obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({map:state.canvases[canvas],...state.blend});\r\n                    obj.canvas=canvas;\r\n                });\r\n        }\r\n    };\r\n    inspect.add(state,'currentType',imageTypes)\r\n        .onChange(v=>{\r\n            imageFolder.destroy();\r\n            imageEditor(v);\r\n        });\r\n\r\n    if(!obj.isHD)\r\n        obj.isHD=false;\r\n    inspect.add(obj, 'isHD')\r\n        .onChange(v=>{\r\n            obj.isHD=v;\r\n            if(v)\r\n                obj.children[obj.children.length-1].geometry=state.geometry.HD;\r\n            else\r\n                obj.children[obj.children.length-1].geometry=state.geometry.normal;\r\n        });\r\n    return imageEditor;\r\n}\r\n\r\nfunction textGui(obj){\r\n    const text=inspect.addFolder('text');\r\n    if(!obj.text)\r\n        obj.text={top:'',bottom:'',link:'',href:''};\r\n    text.add(obj.text,'top');\r\n    text.add(obj.text,'bottom');\r\n    \r\n    const link=text.addFolder('link');\r\n    link.add(obj.text,'link');\r\n    link.add(obj.text,'href');\r\n    \r\n    if(!obj.action)\r\n        obj.action='none';\r\n    inspect.add(obj,'action',state.actions);\r\n}\r\n\r\nfunction vectorGui(obj){\r\n    inspect.addColor(obj.children[0].material,'color');\r\n    \r\n    vec3Control(inspect,'position',obj.position,1,20,.001);\r\n    vec3Control(inspect,'scale',obj.scale,1,10,.001);\r\n    vec3Control(inspect,'rotation',obj.rotation,180/Math.PI,180,.1);\r\n    \r\n    vec3Control(inspect,'light position',obj.children[1].position,1,20,.001);\r\n    inspect.addColor(obj.children[1],'color');\r\n    inspect.add(obj.children[1],'power',0,100,.1);\r\n}\r\n\r\nfunction vec3Control(folder,name,vec3,f,bound,step){\r\n    const vecGui=folder.addFolder(name);\r\n    let tempVec;\r\n    if(vec3.x!=undefined)\r\n        tempVec={x:vec3.x*f,y:vec3.y*f,z:vec3.z*f};\r\n    else\r\n        tempVec={_x:vec3._x*f,_y:vec3._y*f,_z:vec3._z*f};\r\n    for(let d in tempVec)\r\n        vecGui.add(tempVec, d, -bound, bound, step)\r\n            .onChange(v=>vec3[d]=v/f);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/setPaintings.js?");

/***/ }),

/***/ "./src/setScene.js":
/*!*************************!*\
  !*** ./src/setScene.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sceneGui: () => (/* binding */ sceneGui),\n/* harmony export */   sceneState: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var lil_gui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lil-gui */ \"./node_modules/lil-gui/dist/lil-gui.esm.js\");\n/* harmony import */ var _setPaintings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPaintings */ \"./src/setPaintings.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\n\r\nconst state={\r\n    camera:0,museum:0,ambient:0,spotLight:0,floor:0,skyBox:0\r\n};\r\n\r\nfunction sceneGui(){\r\n    const gui = new lil_gui__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n    gui.domElement.style='position: absolute; top: 0px; left: 0px;';\r\n    const sceneObjects={\r\n        museum:{\r\n            color:state.museum.material,\r\n            position:state.museum,\r\n            rotation:state.museum,\r\n            scale:state.museum\r\n        },\r\n        ambient:{color:state.ambient},\r\n        spotLight:{\r\n            color:state.spotLight,\r\n            position:state.spotLight,\r\n            power:state.spotLight\r\n        },\r\n        floor:{\r\n            position:state.floor,\r\n            color:state.floor.material,\r\n            scale:state.floor\r\n        },\r\n        skyBox:{\r\n            position:state.skyBox,\r\n            scale:state.skyBox\r\n        }\r\n    };\r\n    const printObj={\r\n        getOutput:()=>{\r\n            const out=sceneObjects;\r\n            for(let obj in out)\r\n                for(let prop in out[obj])\r\n                    out[obj][prop]=out[obj][prop][prop];\r\n            return out;\r\n        },\r\n        print:function(){\r\n            const out=this.getOutput();\r\n            console.log(out);\r\n            (0,file_saver__WEBPACK_IMPORTED_MODULE_1__.saveAs)(new Blob([JSON.stringify(out)], {type: 'application/json'}),'sceneProps.json');\r\n        },\r\n        save:function(){\r\n            const out=this.getOutput();\r\n            localStorage.removeItem('sceneProps');\r\n            localStorage.setItem('sceneProps',JSON.stringify(out));\r\n        },\r\n        printPosition:()=>console.log(state.camera.position)\r\n    };\r\n    gui.add(printObj,'print');\r\n    gui.add(printObj,'save');\r\n    gui.add(printObj,'printPosition');\r\n    for(let object in sceneObjects){\r\n        let folder=gui.addFolder(object);\r\n        for(let prop in sceneObjects[object]){\r\n            if(prop=='color')\r\n                folder.addColor(sceneObjects[object][prop],prop);\r\n            else if(sceneObjects[object][prop][prop].x!=undefined||sceneObjects[object][prop][prop]._x!=undefined){\r\n                let input={f:1,max:100,step:.01};\r\n                if(prop=='rotation')\r\n                    input={f:180/Math.PI,max:180,step:.1};\r\n\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.vec3Control)(folder,prop,sceneObjects[object][prop][prop],input.f,input.max,input.step);\r\n            }\r\n            else\r\n                folder.add(sceneObjects[object][prop],prop);\r\n        }\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/setScene.js?");

/***/ }),

/***/ "./src/paintings.json":
/*!****************************!*\
  !*** ./src/paintings.json ***!
  \****************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"k\":{\"imageType\":\"shader\",\"position\":{\"x\":0,\"y\":0,\"z\":-0.732},\"rotation\":{\"isEuler\":true,\"_x\":-1.5707963267948963,\"_y\":0,\"_z\":0,\"_order\":\"XYZ\"},\"scale\":{\"x\":1,\"y\":1,\"z\":1},\"color\":3088191,\"text\":{\"top\":\"hi\",\"bottom\":\"my\",\"link\":\"g\",\"href\":\"\"},\"action\":\"none\",\"isHD\":false,\"light\":{\"position\":{\"x\":0,\"y\":1,\"z\":0},\"power\":9869.604401089357,\"color\":16777215}}}');\n\n//# sourceURL=webpack://art-gallery/./src/paintings.json?");

/***/ }),

/***/ "./src/sceneProps.json":
/*!*****************************!*\
  !*** ./src/sceneProps.json ***!
  \*****************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"museum\":{\"color\":3088191,\"position\":{\"x\":0,\"y\":0,\"z\":0},\"rotation\":{\"isEuler\":true,\"_x\":0,\"_y\":0,\"_z\":0,\"_order\":\"XYZ\"},\"scale\":{\"x\":1,\"y\":1,\"z\":1}},\"ambient\":{\"color\":16777215},\"spotLight\":{\"color\":16777215,\"position\":{\"x\":0,\"y\":16,\"z\":0},\"power\":91389.1935753041},\"floor\":{\"position\":{\"x\":0,\"y\":-1.14,\"z\":0},\"color\":7294847,\"scale\":{\"x\":1,\"y\":1,\"z\":1}},\"skyBox\":{\"position\":{\"x\":0,\"y\":3.63,\"z\":-3.5},\"scale\":{\"x\":1,\"y\":1,\"z\":1}}}');\n\n//# sourceURL=webpack://art-gallery/./src/sceneProps.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkart_gallery"] = self["webpackChunkart_gallery"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_file-saver_dist_FileSaver_min_js-node_modules_lil-gui_dist_lil-gui_esm_j-df54d9"], () => (__webpack_require__("./src/main.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;