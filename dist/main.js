/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/constraints.js":
/*!****************************!*\
  !*** ./src/constraints.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   keepInBounds: () => (/* binding */ keepInBounds),\n/* harmony export */   manageHealth: () => (/* binding */ manageHealth),\n/* harmony export */   move: () => (/* binding */ move),\n/* harmony export */   player: () => (/* binding */ player)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_addons_controls_PointerLockControls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three/addons/controls/PointerLockControls.js */ \"./node_modules/three/examples/jsm/controls/PointerLockControls.js\");\n\r\n\r\n\r\nlet camera,renderer,controls;\r\nconst y=.6,e=.5,\r\n  bigBound={lo:new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(-1.867,.6,-19.35),hi:new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(5.5,.6,8.898)},\r\n  smallBound={lo:new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(-1.867,.6,-7.5),hi:new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(15.5,.6,-2.9)},\r\n  player={moveForward:0,moveBackward:0,moveLeft:0,moveRight:0},\r\n  velocity=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),\r\n  direction=new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(0,0);\r\n\r\nfunction init(button,_renderer,_camera,games){\r\n  renderer=_renderer;\r\n  camera=_camera;\r\n  controls=new three_addons_controls_PointerLockControls_js__WEBPACK_IMPORTED_MODULE_1__.PointerLockControls(camera,renderer.domElement);\r\n  const bindKeys=player=>{\r\n      window.onkeydown=ev=>{\r\n          if(ev.key=='e') button.click();\r\n          if(ev.key=='q') {\r\n              if(controls.isLocked)controls.unlock();\r\n              else controls.lock();\r\n          }\r\n          switch ( ev.code ) {\r\n              case 'ArrowUp':\r\n              case 'KeyW':\r\n                  player.moveForward = 1;\r\n                  break;\r\n              case 'ArrowLeft':\r\n              case 'KeyA':\r\n                  player.moveLeft = 1;\r\n                  break;\r\n              case 'ArrowDown':\r\n              case 'KeyS':\r\n                  player.moveBackward = 1;\r\n                  break;\r\n              case 'ArrowRight':\r\n              case 'KeyD':\r\n                  player.moveRight = 1;\r\n                  break;\r\n          }\r\n      };\r\n      window.onkeyup=ev=> {\r\n          switch ( ev.code ) {\r\n              case 'ArrowUp':\r\n              case 'KeyW':\r\n                  player.moveForward = 0;\r\n                  break;\r\n              case 'ArrowLeft':\r\n              case 'KeyA':\r\n                  player.moveLeft = 0;\r\n                  break;\r\n              case 'ArrowDown':\r\n              case 'KeyS':\r\n                  player.moveBackward = 0;\r\n                  break;\r\n              case 'ArrowRight':\r\n              case 'KeyD':\r\n                  player.moveRight = 0;\r\n                  break;\r\n          }\r\n      };\r\n  };\r\n  bindKeys(player);\r\n  for(let game in games)\r\n    if(game!=='paused')\r\n      games[game].bindKeys=bindKeys;\r\n}\r\nfunction move(delta){\r\n  velocity.x -= velocity.x * 10.0 * delta;\r\n  velocity.z -= velocity.z * 10.0 * delta;\r\n\r\n  direction.y = player.moveForward-player.moveBackward;\r\n  direction.x = player.moveRight-player.moveLeft;\r\n  direction.normalize();\r\n\r\n  if ( player.moveForward || player.moveBackward ) velocity.z -= direction.y * 40.0 * delta;\r\n  if ( player.moveLeft || player.moveRight ) velocity.x -= direction.x * 40.0 * delta;\r\n\r\n  controls.moveRight( - velocity.x * delta );\r\n  controls.moveForward( - velocity.z * delta );\r\n}\r\nfunction keepInBounds(pos){\r\n    if(Math.abs(pos.y-10)<e){\r\n        pos.y=10;\r\n        camera.health-=1;\r\n        return;\r\n    }\r\n    // pos=new Vector3();\r\n    const upperBound=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\r\n    upperBound.copy(bigBound.hi);\r\n    const lowerBound=new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\r\n    lowerBound.copy(bigBound.lo);\r\n\r\n    if((pos.z<smallBound.hi.z+e)&&(pos.z>smallBound.lo.z-e)){\r\n        upperBound.copy(smallBound.hi);\r\n        if(pos.x>=bigBound.hi.x)\r\n            lowerBound.copy(smallBound.lo);\r\n        else\r\n            upperBound.setZ(bigBound.hi.z);\r\n    }\r\n    \r\n    pos.clamp(lowerBound,upperBound);\r\n}\r\nfunction manageHealth(){\r\n    if(camera.health==0){\r\n        camera.position.set(0,0,0);\r\n        camera.health=100;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/constraints.js?");

/***/ }),

/***/ "./src/games/dodge.js":
/*!****************************!*\
  !*** ./src/games/dodge.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _gameObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameObject */ \"./src/games/gameObject.js\");\n\r\n\r\nconst canvas=document.createElement('canvas');\r\ncanvas.width=window.innerWidth;\r\ncanvas.height=window.innerHeight;\r\n//document.body.appendChild(canvas);\r\nconst key='Qw?5a$';\r\nconst ctx=canvas.getContext('2d');\r\n\r\nconst enemies=[];\r\nconst spawnRadius=75000;\r\n\r\nlet minSide=Math.min(canvas.width,canvas.height);\r\nconst explosionImage=new Image(50,50);\r\nexplosionImage.src='images/games/explosion.png';\r\n\r\nlet explosionLoaded=false;\r\nexplosionImage.onload=()=>explosionLoaded=true;\r\nlet level=1,kills=0;\r\nlet maxScore=localStorage.getItem(key)||1;\r\nlet time=0;\r\nlet pause=true;\r\nconst state={onPlay:()=>{}, onPause:()=>{}, canvas, bindKeys:()=>{}, unbindKeys:()=>{}};\r\nconst explosions={};\r\nfunction explode(x,y){\r\n  explosions[[x,y]]=100;\r\n  kills++;\r\n}\r\nfunction drawExplosion([x,y]){\r\n  if(explosions[[x,y]]--<0){\r\n    delete explosions[[x,y]];\r\n    console.log('del')\r\n  }\r\n  else if(explosionLoaded)\r\n    ctx.drawImage(explosionImage,x-minSide/20,y-minSide/20,minSide/20,minSide/20);\r\n}\r\n\r\nclass ship extends _gameObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n  constructor(scale,color,speed){\r\n    super(canvas,ctx,scale,color,speed);\r\n  }\r\n  drawPattern(){\r\n    const cos=Math.cos(this.angle);\r\n    const sin=Math.sin(this.angle);\r\n    this.drawTo(0,-2,cos,sin);\r\n    this.drawTo(-1,1,cos,sin);\r\n    this.drawTo(0,0,cos,sin);\r\n    this.drawTo(1,1,cos,sin);\r\n    this.drawTo(0,-2,cos,sin);\r\n  }\r\n  spawn(player){\r\n    for(let i=0;i<1;i++){\r\n      this.x=Math.random()*canvas.width*1.25;\r\n      this.y=Math.random()*canvas.height*1.25;\r\n      if(((this.x-player.x)**2+(this.y-player.y)**2)<=spawnRadius)\r\n        i--;\r\n    }\r\n  }\r\n  update(player,enemies){\r\n    for(let enemy of enemies){\r\n      if(this===enemy) break;\r\n      const dir={x:this.x-enemy.x,y:this.y-enemy.y};\r\n      const length=dir.x**2+dir.y**2;\r\n      if(length<400){\r\n        explode((this.x+enemy.x)/2,(this.y+enemy.y)/2)\r\n        this.spawn(player);\r\n        enemy.spawn(player);\r\n      }\r\n    }\r\n    const dir={x:this.x-player.x,y:this.y-player.y};\r\n    const length=Math.sqrt(dir.x**2+dir.y**2);\r\n    if(length<20){\r\n      explode(this.x,this.y);\r\n      this.spawn(player);\r\n      player.hit();\r\n    }\r\n    \r\n      \r\n    dir.x/=length;\r\n    dir.y/=length;\r\n    this.x-=dir.x*this.speed;\r\n    this.y-=dir.y*this.speed;\r\n\r\n    this.angle=Math.acos(dir.y)*(dir.x>0?-1:1);\r\n  }\r\n}\r\n\r\nconst player=new ship(minSide*.02,'green',4);\r\nplayer.spawn=function(){\r\n  this.x=canvas.width*.5;\r\n  this.y=canvas.height*.5;\r\n  this.moveForward=this.moveBackward=this.moveLeft=this.moveRight=0;\r\n}\r\nplayer.setup=function(){\r\n  this.spawn();\r\n};\r\nplayer.move=function(){\r\n  let dir={\r\n    y:this.moveForward-this.moveBackward,\r\n    x:this.moveRight-this.moveLeft\r\n  };\r\n  if(dir.x===0&&dir.y===0)\r\n    return;\r\n  const length=Math.sqrt(dir.x**2+dir.y**2);\r\n  dir.x/=length;\r\n  dir.y/=length;\r\n\r\n  if ( this.moveForward || this.moveBackward ) this.y-=dir.y*this.speed;\r\n  if ( this.moveLeft || this.moveRight ) this.x+=dir.x*this.speed;\r\n  this.y=Math.min(Math.max(0,this.y),canvas.height);\r\n  this.x=Math.min(Math.max(0,this.x),canvas.width);\r\n  //console.log(player)\r\n  this.angle=Math.acos(dir.y)*(dir.x<0?-1:1);\r\n};\r\nplayer.hit=function(){\r\n  console.log('died')\r\n  time=0;\r\n  this.setup();\r\n  enemies.forEach(val=>val.spawn(player));\r\n  let score=level*25+kills*2;\r\n  if(score>maxScore){\r\n    maxScore=score;\r\n    localStorage.setItem(key,score);\r\n  }\r\n  while(level>1){\r\n    level--;\r\n    enemies.pop();\r\n  }\r\n  kills=0;\r\n};\r\nfunction levelUp(){\r\n  time=0;\r\n  level++;\r\n  let ds=0;\r\n  if(level%5==0) ds=.05;\r\n  enemies.push(new ship(minSide*.015,'red',3+ds));\r\n  player.spawn();\r\n  for(let enemy of enemies)\r\n    enemy.spawn(player);\r\n}\r\n\r\nenemies.setup=function(){\r\n  for(let i=0;i<6;i++){\r\n    const newEnemy=new ship(minSide*.015,'red',3);\r\n    newEnemy.spawn(player);\r\n    this.push(newEnemy);\r\n  }\r\n}\r\n\r\nplayer.setup();\r\nenemies.setup();\r\n\r\nfunction loop(){\r\n  setTimeout(()=>{\r\n    if(time>20000)\r\n      levelUp();\r\n    time+=60;\r\n    ctx.fillStyle='black';\r\n    ctx.fillRect(0,0,canvas.width,canvas.height);\r\n\r\n    player.draw();\r\n    player.move();\r\n    enemies.forEach(enemy=>{\r\n      enemy.update(player,enemies);\r\n      enemy.draw();\r\n    });\r\n    for(let boom in explosions)\r\n      drawExplosion(boom.split(',').map(val=>parseFloat(val)));\r\n    \r\n    ctx.strokeStyle='red';\r\n    ctx.strokeText('max score: '+maxScore,canvas.width-90,25);\r\n    ctx.strokeText('level '+level,canvas.width-90,35);\r\n    ctx.strokeText((time/1000).toFixed(1),canvas.width-90,45);\r\n    if(pause)\r\n      return;\r\n    loop();\r\n  },60);\r\n}\r\n// window.onresize=()=>{\r\n//   canvas.width=window.innerWidth;\r\n//   canvas.height=window.innerHeight;\r\n//   minSide=Math.min(canvas.width,canvas.height);\r\n//   player.scale=minSide*.02;\r\n//   enemies.forEach(enemy=>enemy.scale=minSide*.015);\r\n//   if(pause)\r\n//     loop();\r\n// }\r\nstate.onPlay=()=>{\r\n  state.bindKeys(player);\r\n  pause=false;\r\n  loop();\r\n};\r\nstate.onPause=()=>{\r\n  pause=true;\r\n  state.unbindKeys();\r\n};\r\nloop();\r\n\n\n//# sourceURL=webpack://art-gallery/./src/games/dodge.js?");

/***/ }),

/***/ "./src/games/gameObject.js":
/*!*********************************!*\
  !*** ./src/games/gameObject.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gameObject)\n/* harmony export */ });\nclass gameObject{\r\n  constructor(canvas,ctx,scale,color,speed,angle,x,y){\r\n    this.canvas=canvas;\r\n    this.ctx=ctx;\r\n    this.angle=angle||0;\r\n    this.scale=scale||1;\r\n    this.speed=speed||0;\r\n    this.color=color||'red';\r\n    this.x=x||0;\r\n    this.y=y||0;\r\n  }\r\n  drawTo(x,y,cos,sin){\r\n    this.ctx.lineTo(\r\n      this.x+this.scale*(x*cos-y*sin),\r\n      this.y+this.scale*(y*cos+x*sin)\r\n    );\r\n  }\r\n  drawPattern(){\r\n    const cos=Math.cos(this.angle);\r\n    const sin=Math.sin(this.angle);\r\n    this.drawTo(0,-2,cos,sin);\r\n    this.drawTo(-1,1,cos,sin);\r\n    this.drawTo(0,0,cos,sin);\r\n    this.drawTo(1,1,cos,sin);\r\n    this.drawTo(0,-2,cos,sin);\r\n  }\r\n  draw(){\r\n    if(this.x<0||this.y<0||this.x>this.canvas.width||this.y>this.canvas.height)\r\n        return;\r\n    this.ctx.fillStyle=this.color;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.x,this.y);\r\n    this.drawPattern();\r\n    this.ctx.closePath();\r\n    this.ctx.fill();\r\n  }\r\n}\n\n//# sourceURL=webpack://art-gallery/./src/games/gameObject.js?");

/***/ }),

/***/ "./src/games/shoot.js":
/*!****************************!*\
  !*** ./src/games/shoot.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _gameObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameObject */ \"./src/games/gameObject.js\");\n\r\nconst canvas=document.createElement('canvas');\r\ncanvas.width=window.innerWidth;\r\ncanvas.height=window.innerHeight;\r\nconst ctx=canvas.getContext('2d');\r\n\r\nlet time=0,maxKills=0,kills=0;\r\nlet baseHealth=1;\r\nlet pause=true;\r\nconst state={onPlay:()=>{}, onPause:()=>{}, canvas, bindKeys:()=>{}, unbindKeys:()=>{}};\r\nconst enemies=[];\r\nlet bullets=[];\r\nlet player;\r\n\r\nclass bullet extends _gameObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n  constructor(x,y,scale,angle,color,speed){\r\n    super(canvas,ctx,scale,color,speed,angle,x,y);\r\n    this.dir={x:-Math.sin(angle),y:Math.cos(angle)};\r\n    this.x-=this.dir.x*20;\r\n    this.y-=this.dir.y*20;\r\n    this.used=false;\r\n  }\r\n  drawPattern(){\r\n    const cos=this.dir.x;\r\n    const sin=this.dir.y;\r\n    this.drawTo(.5,1,cos,sin);\r\n    this.drawTo(.5,-1,cos,sin);\r\n    this.drawTo(-.5,-1,cos,sin);\r\n    this.drawTo(-.5,1,cos,sin);\r\n    this.drawTo(.5,1,cos,sin);\r\n  }\r\n  update(){\r\n    if(this.x<0||this.y<0||this.x>this.canvas.width||this.y>this.canvas.height){\r\n      this.used=true;\r\n      bullets.used=true;\r\n    }\r\n    this.x-=this.dir.x*this.speed;\r\n    this.y-=this.dir.y*this.speed;\r\n  }\r\n}\r\nclass turret extends _gameObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n  constructor(x,y,scale,angle,color,speed){\r\n    super(canvas,ctx,scale,color,speed,angle,x,y);\r\n    this.health=1;\r\n    this.shoot=this.moveForward=this.moveBackward=this.moveLeft=this.moveRight=0;\r\n    this.time=0;\r\n  }\r\n  drawPattern(){\r\n    const cos=Math.cos(this.angle);\r\n    const sin=Math.sin(this.angle);\r\n    this.drawTo(1,-1,cos,sin);\r\n    this.drawTo(1,1,cos,sin);\r\n    this.drawTo(-1,1,cos,sin);\r\n    this.drawTo(-1,-1,cos,sin);\r\n    this.drawTo(-.5,-1,cos,sin);\r\n    this.drawTo(-.5,-2,cos,sin);\r\n    this.drawTo(.5,-2,cos,sin);\r\n    this.drawTo(.5,-1,cos,sin);\r\n    this.drawTo(1,-1,cos,sin);\r\n  }\r\n  update(){\r\n    if(this.shoot&&this.time>4){\r\n      bullets.push(new bullet(this.x,this.y,5,this.angle,'red',12));\r\n      this.time=0;\r\n    }\r\n    this.time++;\r\n    let dir={\r\n      y:this.moveForward-this.moveBackward,\r\n      x:this.moveRight-this.moveLeft\r\n    };\r\n    if(dir.x===0&&dir.y===0)\r\n      return;\r\n    const length=Math.sqrt(dir.x**2+dir.y**2);\r\n    dir.x/=length;\r\n    dir.y/=length;\r\n  \r\n    if ( this.moveForward || this.moveBackward ) this.angle-=dir.y*this.speed/20;\r\n    if ( this.moveLeft || this.moveRight ) this.x+=dir.x*this.speed;\r\n    this.x=Math.min(Math.max(0,this.x),canvas.width);\r\n  }\r\n}\r\n\r\nconst enemyImages=[];\r\nfor(let i=0;i<2;i++){\r\n  const enemyImage=new Image(50,50);\r\n  enemyImage.src='/../dist/images/games/enemy'+i+'.png';\r\n  enemyImage.loaded=false;\r\n  enemyImage.onload=()=>enemyImage.loaded=true;\r\n  enemyImages.push(enemyImage);\r\n}\r\n\r\nclass enemy extends _gameObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n  constructor(scale,color,speed){\r\n    super(canvas,ctx,scale,color,speed);\r\n  }\r\n  draw(){\r\n    if(this.y>this.canvas.height){\r\n      baseHealth-=.05;\r\n      this.spawn();\r\n    }\r\n    if(this.x<0||this.y<0||this.x>this.canvas.width)\r\n      return;\r\n    if(enemyImages[this.idx].loaded)\r\n      this.ctx.drawImage(enemyImages[this.idx],this.x,this.y,this.scale,this.scale);\r\n  }\r\n  spawn(){\r\n    this.x=Math.random()*(canvas.width-40)+20;\r\n    this.y=Math.random()*-500;    \r\n    this.idx=Math.floor(Math.random()*(enemyImages.length-.1));\r\n  }\r\n  update(){\r\n    if(this.idx===1)\r\n      this.y+=this.speed;\r\n    else{\r\n      const dir={x:this.x-(player.x-5),y:this.y-(player.y-5)};\r\n      const length=Math.sqrt(dir.x**2+dir.y**2);\r\n      if(length<20){\r\n        player.health-=.001;\r\n        return;\r\n      }\r\n      \r\n      \r\n      dir.x/=length;\r\n      dir.y/=length;\r\n      this.x-=dir.x*this.speed;\r\n      this.y-=dir.y*this.speed;\r\n\r\n      this.angle=Math.acos(dir.y)*(dir.x>0?-1:1);\r\n    }\r\n    bullets.forEach(bullet=>{\r\n      if((bullet.x-this.x)**2+(bullet.y-this.y)**2<this.scale**2){\r\n        this.spawn();\r\n        kills+=1;\r\n        bullet.used=true;\r\n        bullets.used=true;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nplayer=new turret(canvas.width/2,canvas.height-100,10,0,'red',3);\r\nfor(let i=0;i<10;i++){\r\n  const e=new enemy(20,'white',2);\r\n  e.spawn();\r\n  enemies.push(e);\r\n}\r\n\r\nfunction restart(){\r\n  maxKills=Math.max(maxKills,kills);\r\n  bullets.length=0;\r\n  enemies.length=10;\r\n  enemies.forEach(enemy=>enemy.spawn());\r\n  kills=0;\r\n  time=0;\r\n  player.health=1;\r\n  player.x=canvas.width/2;\r\n  player.angle=0;\r\n}\r\n\r\nfunction loop(){\r\n  setTimeout(()=>{\r\n    if(time%12000===0){\r\n      console.log('new enemy')\r\n      const e=new enemy(20,'white',2);\r\n      e.spawn();\r\n      enemies.push(e);\r\n    }\r\n    time+=60;\r\n    ctx.fillStyle='black';\r\n    ctx.fillRect(0,0,canvas.width,canvas.height);\r\n\r\n    player.draw();\r\n    player.update();\r\n    enemies.forEach(enemy=>{\r\n      enemy.update(player,enemies);\r\n      enemy.draw();\r\n    });\r\n    if(bullets.used){\r\n      bullets.used=false;\r\n      bullets=bullets.filter(val=>!val.used);\r\n    }\r\n    bullets.forEach(bullet=>{\r\n      bullet.update(player,enemies);\r\n      bullet.draw();\r\n    });\r\n    \r\n    if(player.health<=0||baseHealth<=0)\r\n      restart();\r\n    \r\n    ctx.strokeStyle='red';\r\n    ctx.strokeText('max kills: '+maxKills,canvas.width-90,25);\r\n    ctx.strokeText('kills '+kills,canvas.width-90,35);\r\n    ctx.strokeText((time/1000).toFixed(1),canvas.width-90,45);\r\n    \r\n    ctx.strokeStyle='green';\r\n    ctx.fillStyle='green';\r\n    ctx.strokeText('health',50,35);\r\n    ctx.strokeRect(90,25,100,15);\r\n    ctx.fillRect(90,25,player.health*100,15);\r\n\r\n    \r\n    ctx.strokeText('base health',30,55);\r\n    ctx.strokeRect(90,45,100,15);\r\n    ctx.fillRect(90,45,baseHealth*100,15);\r\n    if(pause)\r\n      return;\r\n    loop();\r\n  },60);\r\n}\r\n\r\nstate.onPlay=()=>{\r\n  state.bindKeys(player);\r\n  pause=false;\r\n  loop();\r\n};\r\nstate.onPause=()=>{\r\n  pause=true;\r\n  state.unbindKeys();\r\n};\r\nloop();\r\n\n\n//# sourceURL=webpack://art-gallery/./src/games/shoot.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n/* harmony import */ var _setPaintings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPaintings */ \"./src/setPaintings.js\");\n/* harmony import */ var _setScene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setScene */ \"./src/setScene.js\");\n/* harmony import */ var _textGui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./textGui */ \"./src/textGui.js\");\n/* harmony import */ var _constraints__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constraints */ \"./src/constraints.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEBUG=true;\r\n\r\nlet scene, camera, renderer;\r\n\r\nconst imageLoader=new three__WEBPACK_IMPORTED_MODULE_4__.TextureLoader();\r\nconst fileLoader=new three__WEBPACK_IMPORTED_MODULE_4__.FileLoader();\r\nconst geometryLoader=new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader();\r\n\r\nconst paintingGeometry=new three__WEBPACK_IMPORTED_MODULE_4__.PlaneGeometry(1.512,1.512);\r\nconst paintingGeometryHD=new three__WEBPACK_IMPORTED_MODULE_4__.PlaneGeometry(1.512,1.512,300);\r\nconst uniformObjects=[];\r\n\r\nconst blend={blending:three__WEBPACK_IMPORTED_MODULE_4__.CustomBlending,blendEquation:three__WEBPACK_IMPORTED_MODULE_4__.AddEquation};\r\n\r\nfunction init(){\r\n    scene = new three__WEBPACK_IMPORTED_MODULE_4__.Scene();\r\n    camera = new three__WEBPACK_IMPORTED_MODULE_4__.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.health=100;\r\n\r\n    renderer = new three__WEBPACK_IMPORTED_MODULE_4__.WebGLRenderer();\r\n    window.onresize=ev=>{\r\n        camera.aspect=window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n    }\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    document.body.appendChild( renderer.domElement );\r\n    \r\n    createScene();\r\n    createPaintings();\r\n\r\n    if(DEBUG){\r\n        (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingGuiInit)();\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.scene=scene;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.uniformObjects=uniformObjects;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.geometry={normal:paintingGeometry,HD:paintingGeometryHD};\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.blend=blend;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.actions=_textGui__WEBPACK_IMPORTED_MODULE_2__.actionList;\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases=_textGui__WEBPACK_IMPORTED_MODULE_2__.canvases;\r\n        for(let canvas in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases){\r\n            _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvases[canvas].anisotropy=4;\r\n            _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.canvasNames.push(canvas);\r\n        }\r\n\r\n        const addNew=(model,add)=>{\r\n            if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName=='')\r\n                return;\r\n            if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects){\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName]);\r\n                return;\r\n            }\r\n            loadGeometry(model,(data)=>{\r\n                data.scene.children[0].material.color.setHex(0x2f1f3f);\r\n                const material = new three__WEBPACK_IMPORTED_MODULE_4__.ShaderMaterial(blend);\r\n                const painting = new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(paintingGeometry, material);\r\n                const spotLight = new three__WEBPACK_IMPORTED_MODULE_4__.SpotLight(0xffffff,1000);\r\n                spotLight.target=painting;\r\n                data.scene.add(spotLight);\r\n\r\n                add(painting,data.scene);\r\n\r\n                scene.add(data.scene);\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.newName,data.scene);\r\n            });\r\n        }\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.addNewPainting=()=>addNew('meshes/paintingFrame.glb',(painting,scene)=>{\r\n            painting.rotateX(Math.PI/2);\r\n            scene.add(painting);\r\n            scene.rotateX(-Math.PI/2)\r\n            scene.frameType='painting';\r\n        });\r\n        _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.addNewGame=()=>addNew('meshes/arcade.glb',(painting,scene)=>{\r\n            painting.rotateZ(20*Math.PI/180);\r\n            painting.scale.set(6.4,10,10);\r\n            painting.rotateY(Math.PI/2);\r\n            scene.rotateY(-Math.PI/2);\r\n            scene.scale.set(.1,.1,.1);\r\n            \r\n            painting.position.set(.26*10,1.142*10,0);\r\n            scene.add(painting);\r\n            scene.frameType='game';\r\n        });\r\n    }\r\n}\r\n\r\nfunction createScene(){\r\n    let props;\r\n    if(DEBUG){\r\n        const propsString= localStorage.getItem('sceneProps');\r\n        console.log('props:'+propsString);\r\n        if(propsString)\r\n            props=JSON.parse(propsString);\r\n        else\r\n            props={\r\n                museum:{\r\n                    color:0x2f1f3f,\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,0,0),\r\n                    rotation:new three__WEBPACK_IMPORTED_MODULE_4__.Euler(0,0,0,'XYZ'),\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(1,1,1)\r\n                },\r\n                ambient:{color:0xffffff},\r\n                spotLight:{\r\n                    color:0xffffff,\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,15,0),\r\n                    power:1000.0\r\n                },\r\n                floor:{\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,0,0),\r\n                    color:0x6f4f7f,\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(1,1,1)\r\n                },\r\n                skyBox:{\r\n                    position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,2.5,0),\r\n                    scale:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(1,1,1)\r\n                }\r\n            };\r\n    }\r\n    else\r\n        props= __webpack_require__(/*! ./state/sceneProps.json */ \"./src/state/sceneProps.json\");\r\n    \r\n    const ambientLight=new three__WEBPACK_IMPORTED_MODULE_4__.AmbientLight(props.ambient.color);\r\n    scene.add(ambientLight);\r\n\r\n    const spotLight = new three__WEBPACK_IMPORTED_MODULE_4__.SpotLight(props.spotLight.color);\r\n    spotLight.power=props.spotLight.power;\r\n    spotLight.position.copy(props.spotLight.position);\r\n    scene.add(spotLight);\r\n\r\n    const floorGeometry=new three__WEBPACK_IMPORTED_MODULE_4__.PlaneGeometry(100,100);\r\n    const floorMaterial=new three__WEBPACK_IMPORTED_MODULE_4__.MeshPhongMaterial({color:props.floor.color,side:three__WEBPACK_IMPORTED_MODULE_4__.DoubleSide});\r\n    const floor=new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(floorGeometry,floorMaterial);\r\n    floor.rotateX(Math.PI/2);\r\n    floor.position.copy(props.floor.position);\r\n    floor.scale.copy(props.floor.scale);\r\n    scene.add(floor);\r\n\r\n    const setupMesh=(url,name,callback)=>{\r\n        const originalName=name;\r\n        if(!name||!props[name])\r\n            name='museum';\r\n        geometryLoader.load(url,(data)=>{\r\n            data.scene.children[0].material.side=three__WEBPACK_IMPORTED_MODULE_4__.DoubleSide;\r\n            data.scene.children[0].material.color.setHex(props[name].color);\r\n            data.scene.children[0].position.copy(props[name].position);\r\n            data.scene.children[0].rotation.set(props[name].rotation._x,props[name].rotation._y,props[name].rotation._z,'XYZ');\r\n            data.scene.children[0].scale.copy(props[name].scale);\r\n            scene.add(data.scene);\r\n            if(callback)\r\n                callback(data);\r\n            if(DEBUG)\r\n                _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState[originalName]=data.scene.children[0];\r\n        });\r\n    };\r\n\r\n    setupMesh('meshes/gallery.glb','museum',data=>\r\n        spotLight.target=data.scene.children[0]);\r\n    setupMesh('meshes/snake.glb','snake');\r\n    setupMesh('meshes/elephant.glb','elephant');\r\n    setupMesh('meshes/baseballBat.glb','baseballBat');\r\n    setupMesh('meshes/cutieCashew.glb','cutieCashew');\r\n\r\n\r\n    const eyeGeometry=new three__WEBPACK_IMPORTED_MODULE_4__.PlaneGeometry(2,2);\r\n    const cubeEyeSides=[\r\n        {eye:'rinnegan',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,1,0)},\r\n        {eye:'rinnegan',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,-1,0)},\r\n        {eye:'byakugan',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(1,0,0)},\r\n        {eye:'ketsuryugan',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(-1,0,0)},\r\n        {eye:'sharingan',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,0,1)},\r\n        {eye:'mangekyo',position:new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,0,-1)}\r\n    ];\r\n    let eyes;\r\n    const sendToGui=()=>{\r\n        _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.camera=camera;\r\n        _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.spotLight=spotLight;\r\n        _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.ambient=ambientLight;\r\n        _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.floor=floor;\r\n        _setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState.skyBox=eyes;\r\n        console.log('scene gui',_setScene__WEBPACK_IMPORTED_MODULE_1__.sceneState)\r\n        ;(0,_setScene__WEBPACK_IMPORTED_MODULE_1__.sceneGui)();\r\n    }\r\n    fileLoader.load('shaders/eyes/eyes.vert',vshader=>{\r\n        eyes=new three__WEBPACK_IMPORTED_MODULE_4__.Scene();\r\n        for(let side of cubeEyeSides){\r\n                fileLoader.load('shaders/eyes/'+side.eye+'.frag',fshader=>{\r\n                    const eyeMaterial=new three__WEBPACK_IMPORTED_MODULE_4__.ShaderMaterial({\r\n                        uniforms:{iTime:{value:100.0}},\r\n                        fragmentShader:fshader,\r\n                        vertexShader:vshader\r\n                    });\r\n                    uniformObjects.push(eyeMaterial.uniforms);\r\n                    const eye=new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(eyeGeometry,eyeMaterial);\r\n                    eye.position.copy(side.position);\r\n                    eye.lookAt(new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0,0,0));\r\n                    eyes.add(eye);\r\n                })\r\n        }\r\n        const skyGeometry=new three__WEBPACK_IMPORTED_MODULE_4__.SphereGeometry(1);\r\n        fileLoader.load('shaders/sky.vert',vshader=>\r\n            fileLoader.load('shaders/sky.frag',fshader=>{ \r\n                const skyMaterial=new three__WEBPACK_IMPORTED_MODULE_4__.ShaderMaterial({\r\n                    uniforms:{iTime:{value:1.0}},\r\n                    vertexShader:vshader,\r\n                    fragmentShader:fshader\r\n                });\r\n                uniformObjects.push(skyMaterial.uniforms);\r\n                const epilepsy=new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(skyGeometry,skyMaterial);\r\n                epilepsy.rotateZ(Math.PI/2);\r\n                epilepsy.scale.set(.1,.1,.1);\r\n                eyes.add(epilepsy);\r\n\r\n                eyes.position.set(1,0,4);\r\n\r\n                eyes.position.copy(props.skyBox.position);\r\n                eyes.scale.copy(props.skyBox.scale);\r\n                scene.add(eyes);\r\n                \r\n                if(DEBUG)\r\n                    sendToGui();\r\n            }));\r\n    });\r\n}\r\n\r\nfunction createPaintings(){\r\n    let paintings;\r\n    if(DEBUG){\r\n        const paintingsString=localStorage.getItem('paintings');\r\n        console.log('paintings: '+paintingsString);\r\n        if(!paintingsString)\r\n            return;\r\n        paintings=JSON.parse(paintingsString);\r\n    }\r\n    else\r\n        paintings= __webpack_require__(/*! ./state/paintings.json */ \"./src/state/paintings.json\");\r\n    for(let name in paintings){\r\n        const painting=paintings[name];\r\n        const modelUrl=painting.frameType==='painting'?'meshes/paintingFrame.glb':'meshes/arcade.glb';\r\n        loadGeometry(modelUrl,data=>{\r\n            data.scene.children[0].material.color.setHex(painting.color);\r\n            data.scene.position.copy(painting.position);\r\n            data.scene.rotation.set(painting.rotation._x,painting.rotation._y,painting.rotation._z);\r\n            data.scene.scale.copy(painting.scale);\r\n            data.scene.text=painting.text;\r\n            data.scene.action=painting.action;\r\n            data.scene.isHD=painting.isHD;\r\n            data.scene.imageType=painting.imageType;\r\n            data.scene.frameType=painting.frameType;\r\n\r\n            const add=paint=>{\r\n                const spotLight = new three__WEBPACK_IMPORTED_MODULE_4__.SpotLight(painting.light.color);\r\n                spotLight.power=painting.light.power;\r\n                spotLight.target=paint;\r\n                data.scene.add(spotLight);\r\n                if(painting.frameType==='painting')\r\n                    paint.rotateX(Math.PI/2);\r\n                else{\r\n                    paint.rotateZ(20*Math.PI/180);\r\n                    paint.scale.set(6.4,10,10);\r\n                    paint.rotateY(Math.PI/2);\r\n                    paint.position.set(.26*10,1.142*10,0);\r\n                }\r\n                spotLight.position.copy(painting.light.position);\r\n                data.scene.add(paint);\r\n                scene.add(data.scene);\r\n                if(DEBUG)\r\n                    (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.changeObj)(name,data.scene);\r\n            };\r\n            const paintGeo=painting.isHD?paintingGeometryHD:paintingGeometry;\r\n            switch(painting.imageType){\r\n            case('image'):\r\n                data.scene.image=painting.image;\r\n                imageLoader.load('images/'+painting.image,(data)=>{\r\n                    data.anisotropy=4;\r\n                    add(new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(paintGeo, new three__WEBPACK_IMPORTED_MODULE_4__.MeshBasicMaterial({map:data,...blend})))\r\n                });\r\n                break;\r\n            case('shader'):\r\n                data.scene.shader=painting.shader;\r\n                fileLoader.load('shaders/'+painting.shader+'.vert',(vshader)=>\r\n                    fileLoader.load('shaders/'+painting.shader+'.frag',(fshader)=>{ \r\n                        const mesh=new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(paintGeo, new three__WEBPACK_IMPORTED_MODULE_4__.ShaderMaterial({\r\n                            uniforms:{iTime:{value:100.0}},\r\n                            vertexShader:vshader,\r\n                            fragmentShader:fshader,\r\n                            ...blend\r\n                        }));\r\n                        add(mesh);\r\n                        uniformObjects.push(mesh.material.uniforms);\r\n                    }));\r\n                break;\r\n            case('canvas'):\r\n                data.scene.canvas=painting.canvas;\r\n                _textGui__WEBPACK_IMPORTED_MODULE_2__.canvases[painting.canvas].anisotropy=4;\r\n                add(new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(paintGeo,new three__WEBPACK_IMPORTED_MODULE_4__.MeshBasicMaterial({map:_textGui__WEBPACK_IMPORTED_MODULE_2__.canvases[painting.canvas],...blend})));\r\n                break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst geometryCache={};\r\nfunction loadGeometry(text,callback){\r\n    if(geometryCache[text])\r\n        callback({scene:geometryCache[text].clone(true)});\r\n    else\r\n        geometryLoader.load(text,data=>{\r\n            geometryCache[text]=data.scene;\r\n            callback({scene:data.scene.clone(true)});\r\n        });\r\n}\r\n\r\nconst clock=new three__WEBPACK_IMPORTED_MODULE_4__.Clock();\r\nfunction update(){\r\n    _constraints__WEBPACK_IMPORTED_MODULE_3__.manageHealth();\r\n    _constraints__WEBPACK_IMPORTED_MODULE_3__.move(clock.getDelta());\r\n    //constraints.keepInBounds(camera.position);\r\n    for(let uniform of uniformObjects)\r\n        if(uniform.iTime)\r\n            uniform.iTime.value=clock.elapsedTime;\r\n    \r\n    for(let canvas in _textGui__WEBPACK_IMPORTED_MODULE_2__.canvases)\r\n        _textGui__WEBPACK_IMPORTED_MODULE_2__.canvases[canvas].needsUpdate=true;\r\n    \r\n    (0,_textGui__WEBPACK_IMPORTED_MODULE_2__.renderText)(camera);\r\n}\r\n\r\nfunction animate() {\r\n    if(_textGui__WEBPACK_IMPORTED_MODULE_2__.games.paused)\r\n    \trequestAnimationFrame(animate);\r\n    update();\r\n\trenderer.render(scene,camera);\r\n}\r\n\r\nfor(let game in _textGui__WEBPACK_IMPORTED_MODULE_2__.games){\r\n    if(game==='paused')\r\n        continue;\r\n    const unbindKeys=()=>{\r\n        console.log('go carsu')\r\n        _textGui__WEBPACK_IMPORTED_MODULE_2__.games[game].bindKeys(_constraints__WEBPACK_IMPORTED_MODULE_3__.player);\r\n        animate();\r\n    };\r\n    _textGui__WEBPACK_IMPORTED_MODULE_2__.games[game].unbindKeys=unbindKeys;\r\n}\r\n\r\ninit();\r\n_constraints__WEBPACK_IMPORTED_MODULE_3__.init(_textGui__WEBPACK_IMPORTED_MODULE_2__.button,renderer,camera,_textGui__WEBPACK_IMPORTED_MODULE_2__.games);\r\nanimate();\n\n//# sourceURL=webpack://art-gallery/./src/main.js?");

/***/ }),

/***/ "./src/setPaintings.js":
/*!*****************************!*\
  !*** ./src/setPaintings.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeObj: () => (/* binding */ changeObj),\n/* harmony export */   paintingGuiInit: () => (/* binding */ init),\n/* harmony export */   paintingState: () => (/* binding */ state),\n/* harmony export */   vec3Control: () => (/* binding */ vec3Control)\n/* harmony export */ });\n/* harmony import */ var lil_gui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lil-gui */ \"./node_modules/lil-gui/dist/lil-gui.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\n\r\nlet gui, listGui, inspect, chooser;\r\nlet textureLoader, loader;\r\n\r\nconst state={\r\n    currentName:'',newName:'',\r\n    currentShader:'',currentImage:'',currentCanvas:'',currentType:'shader',\r\n    addNewGame:()=>{},addNewPainting:()=>{},\r\n    objectNames:[],objects:{},\r\n    getOutput:function(){\r\n        const out={};\r\n        for(let name in this.objects){\r\n            const object=this.objects[name];\r\n            const cout=out[name]={};\r\n            \r\n            cout.frameType=object.frameType;\r\n            cout[object.imageType]=object[object.imageType];\r\n            cout.imageType=object.imageType;\r\n            cout.position=object.position;\r\n            cout.rotation=object.rotation;\r\n            cout.scale=object.scale;\r\n            cout.color=object.children[0].material.color;\r\n            cout.text=object.text;\r\n            cout.action=object.action;\r\n            cout.isHD=object.isHD||false;\r\n            cout.light={\r\n                position:object.children[1].position,\r\n                power:object.children[1].power,\r\n                color:object.children[1].color\r\n            };\r\n        }\r\n        return out;\r\n    },\r\n    print:function(){\r\n        const out=this.getOutput();\r\n        console.log(out);\r\n        (0,file_saver__WEBPACK_IMPORTED_MODULE_0__.saveAs)(new Blob([JSON.stringify(out)], {type: 'application/json'}),'paintings.json');\r\n    },\r\n    save:function(){\r\n        const out=this.getOutput();\r\n        localStorage.removeItem('paintings');\r\n        localStorage.setItem('paintings',JSON.stringify(out));\r\n    },\r\n    remove:function(){\r\n        if(this.objectNames.length==0)\r\n            return;\r\n        this.scene.remove(this.objects[this.currentName]);\r\n        delete this.objects[this.currentName];\r\n        this.objectNames.splice(this.objectNames.findIndex(x=>x==this.currentName),1);\r\n        changeObj('',null);\r\n    },\r\n    scene:null,\r\n    uniformObjects:[],\r\n    geometry:{},\r\n    blend:{},\r\n    actions:[],\r\n    canvasNames:[],canvases:{}\r\n};\r\n\r\nconst imageTypes=['image','shader','canvas'];\r\nconst shaders=['spiral','water'];\r\nconst images=['DeitectivesIntro.jpg','GatoStart.png','SpaceGeoIntro.png'];\r\n\r\nfunction init(){\r\n    gui = new lil_gui__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    listGui= gui.addFolder('list');\r\n    inspect=gui.addFolder('inspector');\r\n    listGui.add(state, 'newName');\r\n    listGui.add(state,'addNewPainting');\r\n    listGui.add(state,'addNewGame');\r\n    listGui.add(state,'print');\r\n    listGui.add(state,'save');\r\n    chooser=listGui.addFolder('chooser');\r\n    textureLoader=new three__WEBPACK_IMPORTED_MODULE_2__.TextureLoader();\r\n    loader=new three__WEBPACK_IMPORTED_MODULE_2__.FileLoader();\r\n}\r\n\r\nconst vectorGui=obj=>{\r\n    inspect.addColor(obj.children[0].material,'color');\r\n    \r\n    vec3Control(inspect,'position',obj.position,1,20,.001);\r\n    vec3Control(inspect,'scale',obj.scale,1,10,.001);\r\n    vec3Control(inspect,'rotation',obj.rotation,180/Math.PI,180,.1);\r\n    \r\n    vec3Control(inspect,'light position',obj.children[1].position,1,20,.001);\r\n    inspect.addColor(obj.children[1],'color');\r\n    inspect.add(obj.children[1],'power',0,100,.1);\r\n};\r\n\r\nconst imageGui=obj=>{\r\n    if(!obj.imageType)\r\n        obj.imageType='shader';\r\n    else\r\n        state['current'+obj.imageType.charAt(0).toUpperCase() + obj.imageType.slice(1)]=obj[obj.imageType];\r\n    state.currentType=obj.imageType;\r\n\r\n    let imageFolder;\r\n    const imageEditor=type=>{\r\n        imageFolder=inspect.addFolder('image');\r\n        obj.imageType=type;\r\n        switch(type){\r\n        case 'image':\r\n            imageFolder.add(state,'currentImage',images)\r\n                .onChange(image=>textureLoader\r\n                        .load('images/'+image,data=>{\r\n                            data.anisotropy=2;\r\n                            obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({map:data,...state.blend});\r\n                            obj.image=image;\r\n                        }));\r\n            break;\r\n        case 'shader':\r\n            imageFolder.add(state,'currentShader',shaders)\r\n                .onChange(shader=>loader\r\n                    .load('shaders/'+shader+'.vert',vert=>loader\r\n                        .load('shaders/'+shader+'.frag',frag=>{\r\n                            obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.ShaderMaterial({\r\n                                uniforms:{iTime:{value:100.0}},\r\n                                fragmentShader:frag,\r\n                                vertexShader:vert,\r\n                                ...state.blend\r\n                            });\r\n                            if(!state.uniformObjects.includes(obj.children[obj.children.length-1].material.uniforms))\r\n                                state.uniformObjects.push(obj.children[obj.children.length-1].material.uniforms);\r\n                            obj.shader=shader;\r\n                        })));\r\n            break;\r\n        case 'canvas':\r\n            imageFolder.add(state,'currentCanvas',state.canvasNames)\r\n                .onChange(canvas=>{\r\n                    obj.children[obj.children.length-1].material=new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({map:state.canvases[canvas],...state.blend});\r\n                    obj.canvas=canvas;\r\n                });\r\n        }\r\n    };\r\n    inspect.add(state,'currentType',imageTypes)\r\n        .onChange(v=>{\r\n            imageFolder.destroy();\r\n            imageEditor(v);\r\n        });\r\n\r\n    if(!obj.isHD)\r\n        obj.isHD=false;\r\n    inspect.add(obj, 'isHD')\r\n        .onChange(v=>{\r\n            obj.isHD=v;\r\n            if(v)\r\n                obj.children[obj.children.length-1].geometry=state.geometry.HD;\r\n            else\r\n                obj.children[obj.children.length-1].geometry=state.geometry.normal;\r\n        });\r\n    return imageEditor;\r\n};\r\n\r\nconst textGui=obj=>{\r\n    const text=inspect.addFolder('text');\r\n    if(!obj.text)\r\n        obj.text={top:'',bottom:'',link:'',href:''};\r\n    text.add(obj.text,'top');\r\n    text.add(obj.text,'bottom');\r\n    \r\n    const link=text.addFolder('link');\r\n    link.add(obj.text,'link');\r\n    link.add(obj.text,'href');\r\n    \r\n    if(!obj.action)\r\n        obj.action='none';\r\n    inspect.add(obj,'action',state.actions);\r\n};\r\n\r\nfunction changeObj(name, obj){\r\n    state.currentName=name;\r\n    if(!(name in state.objects)){\r\n        if(name!=''){\r\n            state.objects[name]=obj;\r\n            state.objectNames.push(name);\r\n        }\r\n        chooser.destroy();\r\n        chooser=listGui.addFolder('chooser')\r\n        chooser.add(state, 'currentName', state.objectNames)\r\n            .onChange(v=>{\r\n                console.log(v+' '+state.currentName);\r\n                changeObj(v,state.objects[v]);\r\n            });\r\n    }\r\n    inspect.destroy();\r\n    if(name=='')\r\n        return;\r\n    inspect=gui.addFolder('inspector');\r\n    inspect.add(state,'remove');\r\n\r\n    const imageEditor=imageGui(obj);\r\n    textGui(obj);\r\n    vectorGui(obj);\r\n\r\n    imageEditor(obj.imageType);\r\n}\r\n\r\nfunction vec3Control(folder,name,vec3,f,bound,step){\r\n    const vecGui=folder.addFolder(name);\r\n    let tempVec;\r\n    if(vec3.x!=undefined)\r\n        tempVec={x:vec3.x*f,y:vec3.y*f,z:vec3.z*f};\r\n    else\r\n        tempVec={_x:vec3._x*f,_y:vec3._y*f,_z:vec3._z*f};\r\n    for(let d in tempVec)\r\n        vecGui.add(tempVec, d, -bound, bound, step)\r\n            .onChange(v=>vec3[d]=v/f);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/setPaintings.js?");

/***/ }),

/***/ "./src/setScene.js":
/*!*************************!*\
  !*** ./src/setScene.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sceneGui: () => (/* binding */ sceneGui),\n/* harmony export */   sceneState: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var lil_gui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lil-gui */ \"./node_modules/lil-gui/dist/lil-gui.esm.js\");\n/* harmony import */ var _setPaintings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPaintings */ \"./src/setPaintings.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\n\r\nconst state={};\r\n\r\nfunction sceneGui(){\r\n    const gui = new lil_gui__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n    gui.domElement.style='position: absolute; top: 0px; left: 0px;';\r\n    const sceneObjects={\r\n        ambient:{color:state.ambient},\r\n        spotLight:{\r\n            color:state.spotLight,\r\n            position:state.spotLight,\r\n            power:state.spotLight\r\n        },\r\n    };\r\n    const props=['rotation','scale','position']\r\n    for(let obj in state){\r\n        if(obj in sceneObjects)\r\n            continue;\r\n        sceneObjects[obj]={};\r\n        if(state[obj].material)\r\n            sceneObjects[obj].color=state[obj].material;\r\n        for(let prop of props)\r\n            if(state[obj][prop])\r\n                sceneObjects[obj][prop]=state[obj];\r\n    }\r\n    const printObj={\r\n        getOutput:()=>{\r\n            const out=sceneObjects;\r\n            for(let obj in out)\r\n                for(let prop in out[obj])\r\n                    out[obj][prop]=out[obj][prop][prop];\r\n            return out;\r\n        },\r\n        print:function(){\r\n            const out=this.getOutput();\r\n            console.log(out);\r\n            (0,file_saver__WEBPACK_IMPORTED_MODULE_1__.saveAs)(new Blob([JSON.stringify(out)], {type: 'application/json'}),'sceneProps.json');\r\n        },\r\n        save:function(){\r\n            const out=this.getOutput();\r\n            localStorage.removeItem('sceneProps');\r\n            localStorage.setItem('sceneProps',JSON.stringify(out));\r\n        },\r\n        printPosition:()=>console.log(state.camera.position)\r\n    };\r\n    gui.add(printObj,'print');\r\n    gui.add(printObj,'save');\r\n    gui.add(printObj,'printPosition');\r\n    for(let object in sceneObjects){\r\n        let folder=gui.addFolder(object);\r\n        for(let prop in sceneObjects[object]){\r\n            if(prop=='color')\r\n                folder.addColor(sceneObjects[object][prop],prop);\r\n            else if(sceneObjects[object][prop][prop].x!=undefined||sceneObjects[object][prop][prop]._x!=undefined){\r\n                let input={f:1,max:100,step:.01};\r\n                if(prop=='rotation')\r\n                    input={f:180/Math.PI,max:180,step:.1};\r\n\r\n                (0,_setPaintings__WEBPACK_IMPORTED_MODULE_0__.vec3Control)(folder,prop,sceneObjects[object][prop][prop],input.f,input.max,input.step);\r\n            }\r\n            else\r\n                folder.add(sceneObjects[object][prop],prop);\r\n        }\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/setScene.js?");

/***/ }),

/***/ "./src/textGui.js":
/*!************************!*\
  !*** ./src/textGui.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionList: () => (/* binding */ actionList),\n/* harmony export */   button: () => (/* binding */ button),\n/* harmony export */   canvases: () => (/* binding */ canvases),\n/* harmony export */   games: () => (/* binding */ games),\n/* harmony export */   renderText: () => (/* binding */ renderText)\n/* harmony export */ });\n/* harmony import */ var _setPaintings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPaintings */ \"./src/setPaintings.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _games_dodge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./games/dodge */ \"./src/games/dodge.js\");\n/* harmony import */ var _games_shoot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./games/shoot */ \"./src/games/shoot.js\");\n\r\n\r\n\r\n\r\n\r\nconst captionDiv=document.createElement('div');\r\ncaptionDiv.className='no-caption';\r\ndocument.body.appendChild(captionDiv);\r\nconst caption={\r\n    top:document.createElement('div'),\r\n    bottom:document.createElement('div'),\r\n    link:document.createElement('a'),\r\n};\r\nfor(let e in caption)\r\n    captionDiv.appendChild(caption[e]);\r\nconst button=document.createElement('button');\r\nbutton.textContent='E';\r\nbutton.className='action';\r\n\r\nconst games={dodgeGame: _games_dodge__WEBPACK_IMPORTED_MODULE_1__.state,shootGame: _games_shoot__WEBPACK_IMPORTED_MODULE_2__.state,paused:true};\r\nconst canvases={};\r\nconst gameScreen=document.createElement('div');\r\ngameScreen.style={position:'absolute',top:'10%',left:'20%',width:'60%',height:'80%'};\r\ndocument.body.appendChild(gameScreen);\r\nconst actions={\r\n  none:null,\r\n  drink:()=>{console.log('drink');camera.health-=10;},\r\n  walkThrough:()=>{console.log('walk');camera.position.y=10;}\r\n};\r\nconst actionList=[];\r\nfor(let game in games){\r\n  if(game==='paused')\r\n    continue;\r\n  canvases[game]=new three__WEBPACK_IMPORTED_MODULE_3__.CanvasTexture(games[game].canvas);\r\n  actions[game]=()=>{\r\n    games.paused=!games.paused;\r\n    if(games.paused){\r\n      games[game].canvas.remove();\r\n      games[game].onPause();\r\n      console.log('paused');\r\n    }\r\n    else{\r\n      gameScreen.appendChild(games[game].canvas);\r\n      games[game].onPlay();\r\n      console.log('unpaused');\r\n    }\r\n  };\r\n}\r\nfor(let action in actions)\r\n  actionList.push(action);\r\n\r\nconst none={top:'',bottom:'',link:'',href:''};\r\nconst curText={...none};\r\nconst distanceToPaintings=20;\r\n\r\nconst getClosestText=camera=>{\r\n  let text=none;\r\n  let action=null;\r\n  for(let painting in _setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects){\r\n      if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].position)\r\n      if(_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].position.distanceToSquared(camera.position)<=distanceToPaintings){\r\n          text=_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].text;\r\n          action=actions[_setPaintings__WEBPACK_IMPORTED_MODULE_0__.paintingState.objects[painting].action];\r\n          break;\r\n      }\r\n  }\r\n  return {text,action};\r\n}\r\n\r\nfunction renderText(camera){\r\n  const {text,action}=getClosestText(camera);\r\n  let k=true,c=0;\r\n  for(let t in text){\r\n      if(t==='hasButton')\r\n          continue;\r\n      if(text[t]!=curText[t])\r\n          k=false;\r\n      if(text[t]==='')\r\n          c++;\r\n  }\r\n\r\n  if(k)return;\r\n\r\n  if(text==none||c===4)\r\n      captionDiv.className='no-caption';\r\n  else\r\n      captionDiv.className='caption';\r\n\r\n  for(let t in caption){\r\n      if(t==='hasButton')\r\n          continue;\r\n      caption[t].textContent=text[t];\r\n      curText[t]=text[t]\r\n  }\r\n  if(text.href!='')\r\n      caption.link.href=text.href;\r\n\r\n  if(action){\r\n      if(!caption.hasButton){\r\n          caption.hasButton=true;\r\n          caption.top.appendChild(button);\r\n      }\r\n      button.onclick=action;\r\n  }\r\n  else if(caption.hasButton){\r\n      caption.hasButton=false;\r\n      button.remove();\r\n      button.onclick=()=>{console.log('hi')};\r\n  }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://art-gallery/./src/textGui.js?");

/***/ }),

/***/ "./src/state/paintings.json":
/*!**********************************!*\
  !*** ./src/state/paintings.json ***!
  \**********************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"k\":{\"imageType\":\"shader\",\"position\":{\"x\":0,\"y\":0,\"z\":-0.732},\"rotation\":{\"isEuler\":true,\"_x\":-1.5707963267948963,\"_y\":0,\"_z\":0,\"_order\":\"XYZ\"},\"scale\":{\"x\":1,\"y\":1,\"z\":1},\"color\":3088191,\"text\":{\"top\":\"hi\",\"bottom\":\"my\",\"link\":\"g\",\"href\":\"\"},\"action\":\"none\",\"isHD\":false,\"light\":{\"position\":{\"x\":0,\"y\":1,\"z\":0},\"power\":9869.604401089357,\"color\":16777215}}}');\n\n//# sourceURL=webpack://art-gallery/./src/state/paintings.json?");

/***/ }),

/***/ "./src/state/sceneProps.json":
/*!***********************************!*\
  !*** ./src/state/sceneProps.json ***!
  \***********************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"museum\":{\"color\":3088191,\"position\":{\"x\":0,\"y\":0,\"z\":0},\"rotation\":{\"isEuler\":true,\"_x\":0,\"_y\":0,\"_z\":0,\"_order\":\"XYZ\"},\"scale\":{\"x\":1,\"y\":1,\"z\":1}},\"ambient\":{\"color\":16777215},\"spotLight\":{\"color\":16777215,\"position\":{\"x\":0,\"y\":16,\"z\":0},\"power\":91389.1935753041},\"floor\":{\"position\":{\"x\":0,\"y\":-1.14,\"z\":0},\"color\":7294847,\"scale\":{\"x\":1,\"y\":1,\"z\":1}},\"skyBox\":{\"position\":{\"x\":0,\"y\":3.63,\"z\":-3.5},\"scale\":{\"x\":1,\"y\":1,\"z\":1}}}');\n\n//# sourceURL=webpack://art-gallery/./src/state/sceneProps.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkart_gallery"] = self["webpackChunkart_gallery"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_file-saver_dist_FileSaver_min_js-node_modules_lil-gui_dist_lil-gui_esm_j-df54d9"], () => (__webpack_require__("./src/main.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;